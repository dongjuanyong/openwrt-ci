diff --git a/net/dnscrypt-proxy2/Makefile b/net/dnscrypt-proxy2/Makefile
index 95b38db78..7d3656b7d 100644
--- a/net/dnscrypt-proxy2/Makefile
+++ b/net/dnscrypt-proxy2/Makefile
@@ -38,6 +38,13 @@ define Package/dnscrypt-proxy2
   CONFLICTS:=dnscrypt-proxy
 endef
 
+define Build/Compile
+$(call GoPackage/Build/Compile,-ldflags "-s -w")
+	chmod +x $(GO_PKG_BUILD_BIN_DIR)/dnscrypt-proxy && $(STAGING_DIR_HOST)/bin/upx --lzma --best $(GO_PKG_BUILD_BIN_DIR)/dnscrypt-proxy
+	[ ! -f $(PKG_BUILD_DIR)/public-resolvers.md ] && wget https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/public-resolvers.md -O $(PKG_BUILD_DIR)/public-resolvers.md
+	[ ! -f $(PKG_BUILD_DIR)/public-resolvers.md.minisig ] && wget https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/public-resolvers.md.minisig -O $(PKG_BUILD_DIR)/public-resolvers.md.minisig
+endef
+
 define Package/dnscrypt-proxy2/install
 	$(call GoPackage/Package/Install/Bin,$(PKG_INSTALL_DIR))
 
@@ -47,9 +54,8 @@ define Package/dnscrypt-proxy2/install
 	$(INSTALL_DIR) $(1)/etc/dnscrypt-proxy2
 	$(INSTALL_CONF) $(PKG_BUILD_DIR)/dnscrypt-proxy/example-dnscrypt-proxy.toml $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
 	$(INSTALL_CONF) ./files/blacklist.txt $(1)/etc/dnscrypt-proxy2/blacklist.txt
-
-	$(INSTALL_DIR) $(1)/etc/init.d
-	$(INSTALL_BIN) ./files/dnscrypt-proxy.init $(1)/etc/init.d/dnscrypt-proxy
+	$(INSTALL_DATA) $(PKG_BUILD_DIR)/public-resolvers.md $(1)/etc/dnscrypt-proxy2/public-resolvers.md
+	$(INSTALL_DATA) $(PKG_BUILD_DIR)/public-resolvers.md.minisig $(1)/etc/dnscrypt-proxy2/public-resolvers.md.minisig
 
 	sed -i "s/^listen_addresses = .*/listen_addresses = ['127.0.0.53:53']/" $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
 	sed -i "s/^  # blacklist_file = 'blacklist.txt'/blacklist_file = 'blacklist.txt'/" $(1)/etc/dnscrypt-proxy2/dnscrypt-proxy.toml
diff --git a/net/softethervpn/Makefile b/net/softethervpn/Makefile
index d596b421c..2a7703a6b 100644
--- a/net/softethervpn/Makefile
+++ b/net/softethervpn/Makefile
@@ -43,14 +43,24 @@ HOST_MAKE_FLAGS += -f src/makefiles/linux_$(if $(shell uname -m | grep 64),64,32
 HOST_LDFLAGS += -Wl,-rpath$(comma)$(STAGING_DIR_HOSTPKG)/lib
 # Prevent calling upstream configure
 define Host/Configure
+	$(SED) 's/^OPTIONS_COMPILE_RELEASE=/&-DUSE_INTEL_AESNI_LIBRARY /;' \
+		-e "s|^OPTIONS_LINK_RELEASE=-O2 |&$(TOPDIR)/../intel_aes_lib/intel_aes64.a |" \
+		$(HOST_BUILD_DIR)/src/makefiles/linux_64bit.mak
 endef
 
 define Host/Compile
 	# Build hamcorebuilder using host compiler and let it generate
 	# the hamcore.se2 archive file
 	# CFLAGS, CPPFLAGS & LDFLAGS need to be passed with CC because they are being ingored
+	(cd $(TOPDIR)/../intel_aes_lib; \
+	$(MAKE) clean; \
+	CC="$(HOSTCC) $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(HOST_LDFLAGS)" $(MAKE); \
+	cd $(HOST_BUILD_DIR); \
 	CC="$(HOSTCC) $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(HOST_LDFLAGS)" $(MAKE) $(HOST_MAKE_FLAGS) \
-		src/bin/BuiltHamcoreFiles/unix/hamcore.se2
+		src/bin/BuiltHamcoreFiles/unix/hamcore.se2; \
+	cd $(TOPDIR)/../intel_aes_lib; \
+	$(MAKE) clean; \
+	CC="$(TARGET_CC) $(TARGET_CFLAGS) $(TARGET_CPPFLAGS) $(TARGET_LDFLAGS)" $(MAKE))
 endef
 
 define Host/Install
@@ -73,6 +83,9 @@ MAKE_FLAGS += \
 	CC="$(TARGET_CC) $(TARGET_CFLAGS) $(TARGET_CPPFLAGS) $(TARGET_LDFLAGS)"
 
 define Build/Configure
+	$(SED) 's/^OPTIONS_COMPILE_RELEASE=/&-DUSE_INTEL_AESNI_LIBRARY /;' \
+		-e "s|^OPTIONS_LINK_RELEASE=-O2 |&$(TOPDIR)/../intel_aes_lib/intel_aes64.a |" \
+		$(PKG_BUILD_DIR)/src/makefiles/linux_64bit.mak
 	# Fetch prebuilt hamcore.se2 from staging dir
 	$(INSTALL_DIR) $(PKG_BUILD_DIR)/src/bin/BuiltHamcoreFiles/unix
 	$(CP) $(HAMCORE_SE2) $(PKG_BUILD_DIR)/src/bin/BuiltHamcoreFiles/unix/hamcore.se2
diff --git a/sound/shairport-sync/Makefile b/sound/shairport-sync/Makefile
index 0050d2bee..9a8507b61 100644
--- a/sound/shairport-sync/Makefile
+++ b/sound/shairport-sync/Makefile
@@ -29,7 +29,7 @@ define Package/shairport-sync/default
   SECTION:=sound
   CATEGORY:=Sound
   TITLE:=AirPlay compatible audio player
-  DEPENDS:=@AUDIO_SUPPORT +libpthread +alsa-lib +libconfig +libdaemon +libpopt
+  DEPENDS:=@AUDIO_SUPPORT $(CXX_DEPENDS) +libpthread +alsa-lib +libconfig +libdaemon +libpopt +libalac
   PROVIDES:=shairport-sync
   URL:=https://github.com/mikebrady/shairport-sync
 endef
@@ -77,7 +77,8 @@ endef
 
 CONFIGURE_ARGS += \
 	--with-alsa \
-	--with-metadata
+	--with-metadata \
+	--with-apple-alac
 
 ifeq ($(BUILD_VARIANT),openssl)
   CONFIGURE_ARGS+= --with-ssl=openssl
diff --git a/sound/shairport-sync/patches/010-no-cxx.patch b/sound/shairport-sync/patches/010-no-cxx.patch
deleted file mode 100644
index c8c8a699e..000000000
--- a/sound/shairport-sync/patches/010-no-cxx.patch
+++ /dev/null
@@ -1,35 +0,0 @@
---- a/Makefile.am
-+++ b/Makefile.am
-@@ -23,10 +23,6 @@ else
- endif
- endif
- 
--if USE_APPLE_ALAC
--  shairport_sync_SOURCES += apple_alac.cpp
--endif
--
- if USE_CUSTOMPIDDIR
- AM_CFLAGS+= \
- 	-DPIDDIR=\"$(CUSTOM_PID_DIR)\"
-@@ -80,11 +76,6 @@ if USE_PA
- shairport_sync_SOURCES += audio_pa.c
- endif
- 
--if USE_CONVOLUTION
--shairport_sync_SOURCES += FFTConvolver/AudioFFT.cpp FFTConvolver/FFTConvolver.cpp FFTConvolver/Utilities.cpp FFTConvolver/convolver.cpp
--AM_CXXFLAGS += -std=c++11
--endif
--
- if USE_DNS_SD
- shairport_sync_SOURCES += mdns_dns_sd.c
- endif
---- a/configure.ac
-+++ b/configure.ac
-@@ -19,7 +19,6 @@ with_os=`echo ${with_os} | tr '[[:upper:]]' '[[:lower:]]' `
- 
- # Checks for programs.
- AC_PROG_CC
--AC_PROG_CXX
- AC_PROG_INSTALL
- 
- PKG_PROG_PKG_CONFIG([0.9.0])
diff --git a/utils/coremark/Makefile b/utils/coremark/Makefile
index 371981e5b..2c51912f1 100644
--- a/utils/coremark/Makefile
+++ b/utils/coremark/Makefile
@@ -47,6 +47,17 @@ endef
 define Package/coremark/install
 	$(INSTALL_DIR) $(1)/bin
 	$(INSTALL_BIN) $(PKG_BUILD_DIR)/coremark $(1)/bin/
+	$(INSTALL_DIR) $(1)/etc
+	$(INSTALL_BIN) ./coremark.sh $(1)/etc/
+	$(INSTALL_DIR) $(1)/etc/uci-defaults
+	$(INSTALL_BIN) ./coremark $(1)/etc/uci-defaults/xxx-coremark
+endef
+
+define Package/coremark/postinst
+#!/bin/sh
+[ -n "$${IPKG_INSTROOT}" ] || sed -i '/coremark/d' /etc/crontabs/root
+[ -n "$${IPKG_INSTROOT}" ] || echo "0 4 * * * /etc/coremark.sh" >> /etc/crontabs/root
+[ -n "$${IPKG_INSTROOT}" ] || crontab /etc/crontabs/root
 endef
 
 $(eval $(call BuildPackage,coremark))
